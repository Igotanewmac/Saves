
pathnodes = [
[ 1 ,  4 ,  4 ,  4 ,  4 ,  4 ,  4 ,  4 ,  4 ,  4 ,  4 ,  4 ,  4 ,  4 ,  4 ,  4 ,  4 ,  4 ,  4 ,  4 ,  4 ,  4 ,  4 ,  4 ,  4 ,  4 ,  4 ,  4 ,  4 ,  4 ,  4 ,  4 ] ,
[ 1 ,  2 ,  1 ,  2 ,  1 ,  2 ,  1 ,  2 ,  1 ,  2 ,  1 ,  2 ,  1 ,  2 ,  1 ,  2 ,  1 ,  2 ,  1 ,  2 ,  1 ,  2 ,  1 ,  2 ,  1 ,  2 ,  1 ,  2 ,  1 ,  2 ,  1 ,  3 ] ,
[ 1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ] ,
[ 1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ] ,
[ 1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ] ,
[ 1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ] ,
[ 1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ] ,
[ 1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ] ,
[ 1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ] ,
[ 1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ] ,
[ 1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ] ,
[ 1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ] ,
[ 1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ] ,
[ 1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ] ,
[ 1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ] ,
[ 1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ] ,
[ 1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ] ,
[ 1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ] ,
[ 1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ] ,
[ 1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ] ,
[ 1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ] ,
[ 1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ] ,
[ 1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ] ,
[ 1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ] ,
[ 1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ] ,
[ 1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ] ,
[ 1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ] ,
[ 1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ] ,
[ 1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ] ,
[ 1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ] ,
[ 1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ,  1 ,  3 ] ,
[ 2 ,  3 ,  2 ,  3 ,  2 ,  3 ,  2 ,  3 ,  2 ,  3 ,  2 ,  3 ,  2 ,  3 ,  2 ,  3 ,  2 ,  3 ,  2 ,  3 ,  2 ,  3 ,  2 ,  3 ,  2 ,  3 ,  2 ,  3 ,  2 ,  3 ,  2 ,  3 ] ,
]

directions = { 1:North , 2:East , 3:South , 4:West }

clear()
change_hat(Hats.Dinosaur_Hat)

hasmoved = True
while hasmoved:
	hasmoved = move( directions[ pathnodes[ get_pos_y() ][ get_pos_x() ] ] )

change_hat(Hats.Straw_Hat)

